[1,["a1QFN44c5N1ZAD3E3Nq/Pi@f9941","de0EyQDhhG4IlU1ygk0GA1","67oczns2hBkaWTnj/jAPG1@f9941","67oczns2hBkaWTnj/jAPG1@6c48a","d3gIs1ojRDnbHjHpdFFv6w","3aWlcw0b9M87WWypFLLWpM@f9941","2fibOYTipBYp6/lWnmBciQ","fesELve4FIULo3loS/dbej","d9EhrvIqZBfbmWWP7Qqwtz"],["node","_spriteFrame","_atlas","_parent","_customMaterial","_textureSource","root","sprite","data","_font","_effectAsset"],[["cc.Node",["_name","_layer","_active","_components","_prefab","_parent","_children","_lpos","_lscale"],0,9,4,1,2,5,5],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","_right","_top","_left","node","__prefab"],-3,1,4],["cc.Sprite",["_sizeMode","_isTrimmedMode","_type","node","__prefab","_spriteFrame","_color","_atlas","_customMaterial"],0,1,4,6,5,6,6],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["cc.BoxCollider2D",["_friction","_enabled","node","__prefab","_size"],1,1,4,5],"cc.SpriteFrame",["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Prefab",["_name"],2],["cc.Node",["_name","_layer","_parent","_components","_prefab","_lpos"],1,1,12,4,5],["cc.CompPrefabInfo",["fileId"],2],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.CircleCollider2D",["_friction","_restitution","_radius","node","__prefab"],0,1,4],["cc.RigidBody2D",["enabledContactListener","awakeOnLoad","_type","_gravityScale","_linearDamping","_angularDamping","node","__prefab"],-3,1,4],["cc.UIOpacity",["node","__prefab"],3,1,4],["cc.Layout",["_resizeMode","_layoutType","_spacingX","_affectedByScale","node","__prefab"],-1,1,4],["09743GWk/dNtalWMpH5B+Xj",["node","__prefab"],3,1,4],["aa8972Pp8RFH7c4/vSAjVtt",["lightWidth","loopTime","timeInterval","node","__prefab","sprite"],0,1,4,1],["cc.Label",["_string","_actualFontSize","_fontSize","_isSystemFontUsed","_enableOutline","_outlineWidth","node","__prefab","_font"],-3,1,4,6],["cc.Graphics",["_lineWidth","node","__prefab","_strokeColor"],2,1,4,5],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[9,0,2],[10,0,1,2,3,4,5,5],[3,0,1,2,1],[0,0,1,5,3,4,7,3],[1,0,1,2,6,7,4],[0,0,1,5,3,4,3],[15,0,1,1],[3,0,1,1],[2,2,0,3,4,6,5,7,3],[0,0,1,5,6,3,4,3],[4,0,2,3,4,2],[0,0,1,6,3,4,3],[0,0,1,5,6,3,4,7,3],[3,0,1,2,3,1],[1,0,6,7,2],[13,0,1,1],[2,0,1,3,4,3],[6,0,1,2,4],[7,0,2],[0,0,1,3,4,3],[0,0,2,1,5,3,4,4],[0,0,1,5,3,4,7,8,3],[8,0,1,2,3,4,5,3],[1,0,5,3,4,1,2,6,7,7],[1,0,4,6,7,3],[1,0,3,1,2,6,7,5],[1,0,4,1,2,6,7,5],[1,0,5,3,1,2,6,7,6],[11,0,1,2,3,4,4],[12,0,1,2,3,4,5,6,7,7],[14,0,1,2,3,4,5,5],[2,0,1,3,4,5,3],[2,2,0,3,4,6,5,3],[2,0,3,4,2],[2,0,1,3,4,6,5,7,3],[2,0,1,3,4,8,5,3],[16,0,1,2,3,4,5,4],[4,1,2,3,4,2],[17,0,1,2,3,4,5,6,7,8,7],[18,0,1,2,3,2],[19,0,1,2,3,4]],[[[{"name":"img1","rect":{"x":0,"y":0,"width":501,"height":498},"offset":{"x":0,"y":0},"originalSize":{"width":501,"height":498},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-250.5,-249,0,250.5,-249,0,-250.5,249,0,250.5,249,0],"indexes":[0,1,2,2,1,3],"uv":[0,498,501,498,0,0,501,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-250.5,"y":-249,"z":0},"maxPos":{"x":250.5,"y":249,"z":0}},"packable":false,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[5],[3]],[[[17,"../play/res/mtl/flashLight流光/flash-light-fn1",[{"hash":3073273755,"name":"../play/res/mtl/flashLight流光/flash-light-fn1|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Light","stageFlags":16,"binding":1,"members":[{"name":"lightColor","type":16,"count":1},{"name":"lightCenterPoint","type":14,"count":1},{"name":"lightAngle","type":13,"count":1},{"name":"lightWidth","type":13,"count":1},{"name":"enableGradient","type":13,"count":1},{"name":"cropAlpha","type":13,"count":1},{"name":"enableFog","type":13,"count":1}],"defines":["ENABLE_LIGHT"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Light","stageFlags":16,"binding":1,"members":[{"name":"lightColor","type":16,"count":1},{"name":"lightCenterPoint","type":14,"count":1},{"name":"lightAngle","type":13,"count":1},{"name":"lightWidth","type":13,"count":1},{"name":"enableGradient","type":13,"count":1},{"name":"cropAlpha","type":13,"count":1},{"name":"enableFog","type":13,"count":1}],"defines":["ENABLE_LIGHT"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n#if ENABLE_LIGHT\n  layout(std140) uniform Light {\n    vec4 lightColor;\n    vec2 lightCenterPoint;\n    float lightAngle;\n    float lightWidth;\n    float enableGradient;\n    float cropAlpha;\n    float enableFog;\n  };\n  vec4 addLightColor(vec4 textureColor, vec4 lightColor, vec2 lightCenterPoint, float lightAngle, float lightWidth) {\n    if (lightWidth <= 0.0) {\n      return textureColor;\n    }\n    float angleInRadians = radians(lightAngle);\n    float dis = 0.0;\n    if (mod(lightAngle, 180.0) != 0.0) {\n      float lightOffsetX = lightCenterPoint.x - ((1.0 - lightCenterPoint.y) / tan(angleInRadians));\n      float dx = lightOffsetX + (1.0 - uv0.y) / tan(angleInRadians);\n      float offsetDis = abs(uv0.x - dx);\n      dis = sin(angleInRadians) * offsetDis;\n    } else {\n      dis = abs(uv0.y - lightCenterPoint.y);\n    }\n    float a = 1.0 ;\n    if (bool(cropAlpha)) {\n      a *= step(0.01, textureColor.a);\n    }\n    if (!bool(enableFog)) {\n      a *= step(dis, lightWidth * 0.5);\n    }\n    if (bool(enableGradient)) {\n      a *= 1.0 - dis / (lightWidth * 0.5);\n    }\n    vec4 finalLightColor = lightColor * a;\n      #if ENABLE_ORIGINCOLOR\n        finalLightColor = textureColor + textureColor * a;\n      #else\n        finalLightColor = textureColor + finalLightColor;\n        finalLightColor.a = textureColor.a;\n      #endif\n      return finalLightColor;\n    }\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  #if ENABLE_LIGHT\n    o = addLightColor(o, lightColor, lightCenterPoint, lightAngle, lightWidth);\n  #endif\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\n  #endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n#if ENABLE_LIGHT\n      uniform vec4 lightColor;\n    uniform vec2 lightCenterPoint;\n    uniform float lightAngle;\n    uniform float lightWidth;\n    uniform float enableGradient;\n    uniform float cropAlpha;\n    uniform float enableFog;\n  vec4 addLightColor(vec4 textureColor, vec4 lightColor, vec2 lightCenterPoint, float lightAngle, float lightWidth) {\n    if (lightWidth <= 0.0) {\n      return textureColor;\n    }\n    float angleInRadians = radians(lightAngle);\n    float dis = 0.0;\n    if (mod(lightAngle, 180.0) != 0.0) {\n      float lightOffsetX = lightCenterPoint.x - ((1.0 - lightCenterPoint.y) / tan(angleInRadians));\n      float dx = lightOffsetX + (1.0 - uv0.y) / tan(angleInRadians);\n      float offsetDis = abs(uv0.x - dx);\n      dis = sin(angleInRadians) * offsetDis;\n    } else {\n      dis = abs(uv0.y - lightCenterPoint.y);\n    }\n    float a = 1.0 ;\n    if (bool(cropAlpha)) {\n      a *= step(0.01, textureColor.a);\n    }\n    if (!bool(enableFog)) {\n      a *= step(dis, lightWidth * 0.5);\n    }\n    if (bool(enableGradient)) {\n      a *= 1.0 - dis / (lightWidth * 0.5);\n    }\n    vec4 finalLightColor = lightColor * a;\n      #if ENABLE_ORIGINCOLOR\n        finalLightColor = textureColor + textureColor * a;\n      #else\n        finalLightColor = textureColor + finalLightColor;\n        finalLightColor.a = textureColor.a;\n      #endif\n      return finalLightColor;\n    }\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  #if ENABLE_LIGHT\n    o = addLightColor(o, lightColor, lightCenterPoint, lightAngle, lightWidth);\n  #endif\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":8}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"ENABLE_LIGHT","type":"boolean"},{"name":"ENABLE_ORIGINCOLOR","type":"boolean"}]}],[{"passes":[{"program":"../play/res/mtl/flashLight流光/flash-light-fn1|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"lightColor":{"type":16,"value":[1,1,0,1]},"lightCenterPoint":{"type":14,"value":[0.2,0.2]},"lightAngle":{"type":13,"value":[36]},"lightWidth":{"type":13,"value":[0.2]},"enableGradient":{"type":13,"value":[1]},"cropAlpha":{"type":13,"value":[1]},"enableFog":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[[18,"Game"],[11,"Game",33554432,[-4,-5,-6,-7],[[2,-2,[0,"f3LpjqayhAqbxplayHFuoD"],[5,749.9999999999999,1334]],[4,45,100,100,-3,[0,"90RTB+0D5DO6jcnnUdWjwF"]]],[1,"c46/YsCPVOJYA4mWEpNYRx",null,null,null,-1,0]],[11,"#tempBallNode",33554432,[-12,-13,-14,-15],[[2,-8,[0,"63NVGTBc1OIZP5vFzu3sew"],[5,161,161]],[28,0.85,0.1,80,-9,[0,"12xMsEMKhA0rSwZ5CR0xgm"]],[29,true,false,0,10,1.2,50,-10,[0,"0fUG9FrSZPrLA8yfyimTkC"]],[15,-11,[0,"8d2VRZjYVFeYbn+7nZUo14"]]],[1,"7dkmuZDtxPkqaNc7QRpAc1",null,null,null,1,0]],[12,"root",33554432,1,[-18,2,-19,-20,-21],[[2,-16,[0,"32mntY8KNKPo9t3i3eq+0O"],[5,700,1183]],[23,4,325,325,617,100,100,-17,[0,"2fWwYpl99HtbTz27UojH33"]]],[1,"93rn0M1q5KwIBj6ZUnjAia",null,null,null,1,0],[1,0,-75.5,0]],[9,"wallsRoot",33554432,3,[-24,-25,-26,-27],[[2,-22,[0,"e0f+E0YwtIg5P7oNKOLldn"],[5,700,1183]],[4,45,100,100,-23,[0,"abHQqz9BtH8aCSyPLkcsjg"]]],[1,"d5q69j6r9FrLkWE83YyBjP",null,null,null,1,0]],[12,"itemsDiplayPanel",33554432,1,[-31],[[2,-28,[0,"afXf3xaoFJTKTaRX3c5+aG"],[5,60,60]],[30,1,1,4,true,-29,[0,"a5oWXekJBNIr6aF4yaQTRP"]],[24,17,10,-30,[0,"ecc4A8XmNIHpjdWY911qdR"]]],[1,"e9scFzEcBLToin/Ypr+RJO",null,null,null,1,0],[1,0,627,0]],[9,"imgItem",33554432,2,[-35],[[2,-32,[0,"8eIZ3Ujx1Gy5vpMkg+EX/G"],[5,501,498]],[31,2,false,-33,[0,"2bO4N47CxNDI0W2LmS2leH"],4],[6,-34,[0,"85BuvAqr5P6bdt4a4lrXjz"]]],[1,"b28erWEidNwY2seYXpybvs",null,null,null,1,0]],[22,"imgItemFash",33554432,2,[[[2,-36,[0,"8aerJUrANPYKGpIZjE80Ag"],[5,501,498]],-37,[36,0.3,1.4,1.2,-39,[0,"51kwxGlcBDVL5+0xH9mIMo"],-38],[6,-40,[0,"42QBWkHepP+L1OMXgzw+Ni"]]],4,1,4,4],[1,"9bO3l7gTdNb6Gihk04VnV6",null,null,null,1,0],[1,0,-392.904,0]],[3,"leftWallNode",33554432,4,[[2,-41,[0,"213ua8un5FLKdoFqucYlbl"],[5,6,1183]],[25,13,164.5,100,100,-42,[0,"c8BcdbpeVJyr6v7iInezGX"]],[10,0.99,-43,[0,"fdKlHBWnZPHrjr3EMWlUo0"],[5,4,1334]],[8,1,0,-44,[0,"78j7QTlfxNIpP2JbHHdGTR"],[4,4294964480],7,8]],[1,"cc7blF85NOsq5fXTIVNhTN",null,null,null,1,0],[1,-347,0,0]],[3,"rightWallNode",33554432,4,[[2,-45,[0,"81Im00F5VAhKwRkQP0TOaQ"],[5,6,1183]],[4,37,100,100,-46,[0,"69kwhMRhhGqoKTDwBsLoL2"]],[10,0.99,-47,[0,"d2ViJijxNJgJKgypXI6/+e"],[5,4,1334]],[8,1,0,-48,[0,"e2CfC623lCT52DcVJuJawQ"],[4,4294502717],9,10]],[1,"61gLeC/GRO05OnWSCkUhVM",null,null,null,1,0],[1,347,0,0]],[3,"bottomWallNode",33554432,4,[[13,-49,[0,"fdyIq+PcRLEosZqyoiV8ZT"],[5,700,6],[0,0.5,0]],[26,44,617,4,100,-50,[0,"b8JQdxXUxCrZ1+CYO9S1p0"]],[10,0.99,-51,[0,"e05kl6w+hB2q1S6iMVvN/c"],[5,750,10]],[8,1,0,-52,[0,"7fh5zge7BN+by+Y4se6iVs"],[4,4294502717],11,12]],[1,"aeq1npzsBLYIJYRzvQXG9W",null,null,null,1,0],[1,0,-591.5,0]],[3,"topWallNode",33554432,4,[[13,-53,[0,"91zU3ybXZNy62IPYRcrK0o"],[5,700,6],[0,0.5,1]],[4,41,4,6,-54,[0,"0as5hzTIpNJ6xpjLTc1xVD"]],[37,false,-55,[0,"e0ZS14mNxO0KZqktfdRgvk"],[5,750,2]],[8,1,0,-56,[0,"01x/QCKxRM9Z15yT/2AS6p"],[4,4294502717],13,14]],[1,"a3kYNsToRD+o02IE8TOMGx",null,null,null,1,0],[1,0,591.5,0]],[19,"itemSplitFlyNode",33554432,[[2,-57,[0,"24luP7uStLobi6x+L7BUdX"],[5,70,70]],[16,0,false,-58,[0,"71eyD3yfxBg7DbnwQYUdFm"]],[6,-59,[0,"4ariLtGDNAGbsj8qPcU4x+"]],[15,-60,[0,"2boOw4ORBINrt2+ql39Lad"]]],[1,"f7xx4MuSxBDo7OZn/l2kyC",null,null,null,1,0]],[5,"default_panel",33554432,1,[[2,-61,[0,"87kgPFyc1AbqraN40uh9X9"],[5,750,1334]],[32,1,0,-62,[0,"1d5mgeycdJ5YSA6Dcqzbd6"],[4,3039439402],0],[27,5,365,365,20,20,-63,[0,"47s8gtFmhLXbl5NBbuOKvR"]]],[1,"f0Gn5HrmFGDKcPPjGUNmnV",null,null,null,1,0]],[5,"item1",33554432,5,[[2,-64,[0,"35+l6FUY5Maa1CKTwuTrtQ"],[5,60,60]],[33,0,-65,[0,"5fZd4SS4ZHJJIQOIpdxfVs"]],[6,-66,[0,"f1/ZhUp9lMJJiBUK1pj745"]]],[1,"33db/bOT1IDbgUWwYTQd8y",null,null,null,1,0]],[3,"txtScore",33554432,1,[[2,-67,[0,"e5pNVBZXlAgaS5UuoiboyJ"],[5,111.4833984375,56.4]],[38,"Score:",30,30,false,true,3,-68,[0,"57/cx3BntLNrVoLHLUEpR8"],1],[14,16,-69,[0,"4b7rEyQqRIp5gRFHsUyShE"]]],[1,"51qNfW94JA2baMuWrVu0O0",null,null,null,1,0],[1,0,561.188,0]],[20,"Node",false,33554432,6,[[2,-70,[0,"9eISRXmOtC6LvpSmwa0qcs"],[5,464,464]],[4,45,100,100,-71,[0,"c1dRRFTktOZ7X88gT1J6ML"]],[34,0,false,-72,[0,"deWXgpo9BFYZb8aMdGbTyf"],[4,2641062845],2,3]],[1,"c5ZkLW1UtIr6wIuFQRDtCx",null,null,null,1,0]],[21,"imgItemGlow",33554432,2,[[2,-73,[0,"d3r0ZOV1hB9JtcOjYoXqjr"],[5,501,498]],[35,2,false,-74,[0,"e6lSVp7XBGNagYPIr+MID0"],5,6],[6,-75,[0,"85vaPOlGdGfYIdEHi5H07S"]]],[1,"86ds9KKJtOmLbRLoEs2g8W",null,null,null,1,0],[1,763.265,0,0],[1,0.3,0.3,1]],[9,"#gameAnimUI",33554432,3,[12,-77],[[7,-76,[0,"7eMdp//ZJGzKmBWBJdYKUy"]]],[1,"bapkiejdtB2Im+00itxfVt",null,null,null,1,0]],[3,"startPosNode",33554432,3,[[7,-78,[0,"dapOtOzCpBeLe3jsuWh71j"]],[14,1,-79,[0,"123Dy3d3ZJV6pEYtP75Pz+"]]],[1,"aaW0II/EdAi70jMbVqSbF4",null,null,null,1,0],[1,0,541.5,0]],[5,"graphicNode",33554432,2,[[7,-80,[0,"32qDUhROhDwKLWmr0PcQyh"]],[39,4,-81,[0,"92HThrj1NPtJGNy+0VWj5h"],[4,4292205368]]],[1,"dasfvRtihCmqCyG/ZKS92N",null,null,null,1,0]],[5,"ballRoot",33554432,3,[[2,-82,[0,"dbh0gBxGNKSIW1WWd4D7xY"],[5,700,1183]],[4,45,100,100,-83,[0,"c8iMQTS4BJz7Owv7YQW0nc"]]],[1,"52hS2aLXZE74hHcLBSSME4",null,null,null,1,0]],[16,2,false,7,[0,"ebNEeWprpB1Zdkx5WUxMTO"]],[5,"animPanel",33554432,18,[[7,-84,[0,"09lSLWx5ZOrpb4FW7vOjOO"]]],[1,"91c52RUm9IHaBFAjZ6jjKh",null,null,null,1,0]]],0,[0,6,1,0,0,1,0,0,1,0,-1,13,0,-2,5,0,-3,15,0,-4,3,0,0,2,0,0,2,0,0,2,0,0,2,0,-1,6,0,-2,17,0,-3,7,0,-4,20,0,0,3,0,0,3,0,-1,19,0,-3,4,0,-4,21,0,-5,18,0,0,4,0,0,4,0,-1,8,0,-2,9,0,-3,10,0,-4,11,0,0,5,0,0,5,0,0,5,0,-1,14,0,0,6,0,0,6,0,0,6,0,-1,16,0,0,7,0,-2,22,0,7,22,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,0,11,0,0,11,0,0,12,0,0,12,0,0,12,0,0,12,0,0,13,0,0,13,0,0,13,0,0,14,0,0,14,0,0,14,0,0,15,0,0,15,0,0,15,0,0,16,0,0,16,0,0,16,0,0,17,0,0,17,0,0,17,0,0,18,0,-2,23,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,23,0,8,1,2,3,3,12,3,18,84],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22],[1,9,1,2,1,4,1,1,2,1,2,1,2,1,2,4,1],[0,4,5,1,2,6,2,0,1,0,1,0,1,0,1,7,2]],[[[40,"flash-light-fn1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_PIXEL_ALIGNMENT":true,"USE_ALPHA_TEST":true,"USE_TEXTURE":true,"ENABLE_LIGHT":true,"ENABLE_ORIGINCOLOR":true}],[[[{"alphaThreshold":0,"lightAngle":40,"lightWidth":0.8},"lightColor",8,[4,4289177407],"lightCenterPoint",8,[0,0.5,0.5]]],11]]],0,0,[0],[10],[8]]]]
